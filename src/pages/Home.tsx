
import { useState } from 'react';
import DomainBox from '../components/DomainBox';
import DomainModal from '../components/DomainModal';
import { useLanguage } from '../contexts/LanguageContext';

const Home = () => {
  const { t, language } = useLanguage();
  const [selectedDomain, setSelectedDomain] = useState<{
    title: string;
    departments: string[];
  } | null>(null);

  // Department translations
  const departmentTranslations = {
    english: {
      education: [
        'Primary Education',
        'Secondary Education',
        'Vocational Training',
        'Adult Literacy',
        'Digital Literacy',
        'Teacher Training',
        'Educational Resources',
        'Scholarship Programs',
        'Special Education',
        'Language Development',
        'Career Guidance'
      ],
      healthcare: [
        'Primary Healthcare',
        'Community Medicine',
        'Mental Health',
        'Maternal Care',
        'Child Health',
        'Preventive Care',
        'Health Awareness',
        'Medical Camps',
        'Emergency Services',
        'Nutrition Programs',
        'Health Insurance'
      ],
      environment: [
        'Conservation',
        'Renewable Energy',
        'Waste Management',
        'Water Conservation',
        'Afforestation',
        'Climate Action',
        'Sustainable Agriculture',
        'Environmental Education',
        'Pollution Control',
        'Biodiversity Protection',
        'Green Technology'
      ],
      womenEmpowerment: [
        'Skill Development',
        'Entrepreneurship',
        'Legal Aid',
        'Self Help Groups',
        'Leadership Training',
        'Financial Inclusion',
        'Health Awareness',
        'Education Support',
        'Domestic Violence Prevention',
        'Economic Empowerment',
        'Rights Advocacy'
      ],
      ruralDevelopment: [
        'Infrastructure Development',
        'Agricultural Support',
        'Water Supply',
        'Rural Banking',
        'Technology Access',
        'Market Linkages',
        'Cooperative Development',
        'Rural Housing',
        'Transportation',
        'Communication Systems',
        'Livelihood Programs'
      ],
      childWelfare: [
        'Child Protection',
        'Nutrition Programs',
        'Early Childhood Care',
        'Child Education',
        'Health Services',
        'Recreation Activities',
        'Counseling Services',
        'Foster Care',
        'Adoption Services',
        'Child Rights Advocacy',
        'Special Needs Support'
      ],
      elderlyCare: [
        'Senior Care Services',
        'Health Monitoring',
        'Social Activities',
        'Home Care',
        'Pension Support',
        'Medical Assistance',
        'Companionship Programs',
        'Recreation Activities',
        'Mental Health Support',
        'Emergency Services',
        'Family Support'
      ],
      disasterRelief: [
        'Emergency Response',
        'Relief Distribution',
        'Rehabilitation',
        'Preparedness Training',
        'Risk Assessment',
        'Community Mobilization',
        'Recovery Programs',
        'Shelter Management',
        'Medical Emergency',
        'Food Security',
        'Psychological Support'
      ],
      skillDevelopment: [
        'Technical Training',
        'Soft Skills',
        'Computer Training',
        'Handicrafts',
        'Entrepreneurship',
        'Job Placement',
        'Certification Programs',
        'Industry Partnerships',
        'Career Counseling',
        'Financial Literacy',
        'Innovation Labs'
      ]
    },
    tamil: {
      education: [
        'роЖро░роорпНрок роХро▓рпНро╡ро┐',
        'роЗроЯрпИроиро┐ро▓рпИ роХро▓рпНро╡ро┐',
        'родрпКро┤ро┐ро▓рпН рокропро┐ро▒рпНроЪро┐',
        'ро╡ропродрпБ ро╡роирпНродрпЛро░рпН роХро▓рпНро╡ро┐ропро▒ро┐ро╡рпБ',
        'роЯро┐роЬро┐роЯрпНроЯро▓рпН роХро▓рпНро╡ро┐ропро▒ро┐ро╡рпБ',
        'роЖроЪро┐ро░ро┐ропро░рпН рокропро┐ро▒рпНроЪро┐',
        'роХро▓рпНро╡ро┐ ро╡ро│роЩрпНроХро│рпН',
        'роЙродро╡ро┐родрпНродрпКроХрпИ родро┐роЯрпНроЯроЩрпНроХро│рпН',
        'роЪро┐ро▒рокрпНрокрпБ роХро▓рпНро╡ро┐',
        'роорпКро┤ро┐ ро╡ро│ро░рпНроЪрпНроЪро┐',
        'родрпКро┤ро┐ро▓рпН ро╡ро┤ро┐роХро╛роЯрпНроЯрпБродро▓рпН'
      ],
      healthcare: [
        'роорпБродро▓рпНроиро┐ро▓рпИ роЪрпБроХро╛родро╛ро░роорпН',
        'роЪроорпВроХ рооро░рпБродрпНродрпБро╡роорпН',
        'рооройроиро▓роорпН',
        'родро╛ропрпНроорпИ рокро░ро╛рооро░ро┐рокрпНрокрпБ',
        'роХрпБро┤роирпНродрпИ роЪрпБроХро╛родро╛ро░роорпН',
        'родроЯрпБрокрпНрокрпБ рокро░ро╛рооро░ро┐рокрпНрокрпБ',
        'роЪрпБроХро╛родро╛ро░ ро╡ро┐ро┤ро┐рокрпНрокрпБрогро░рпНро╡рпБ',
        'рооро░рпБродрпНродрпБро╡ роорпБроХро╛роорпНроХро│рпН',
        'роЕро╡роЪро░ роЪрпЗро╡рпИроХро│рпН',
        'роКроЯрпНроЯроЪрпНроЪродрпНродрпБ родро┐роЯрпНроЯроЩрпНроХро│рпН',
        'роЪрпБроХро╛родро╛ро░ роХро╛рокрпНрокрпАроЯрпБ'
      ],
      environment: [
        'рокро╛родрпБроХро╛рокрпНрокрпБ',
        'рокрпБродрпБрокрпНрокро┐роХрпНроХродрпНродроХрпНроХ роЖро▒рпНро▒ро▓рпН',
        'роХро┤ро┐ро╡рпБ роорпЗро▓ро╛рогрпНроорпИ',
        'роирпАро░рпН рокро╛родрпБроХро╛рокрпНрокрпБ',
        'роХро╛роЯрпБ ро╡ро│ро░рпНрокрпНрокрпБ',
        'роХро╛ро▓роиро┐ро▓рпИ роироЯро╡роЯро┐роХрпНроХрпИ',
        'роиро┐ро▓рпИропро╛рой ро╡ро┐ро╡роЪро╛ропроорпН',
        'роЪрпБро▒рпНро▒рпБроЪрпНроЪрпВро┤ро▓рпН роХро▓рпНро╡ро┐',
        'рооро╛роЪрпБ роХроЯрпНроЯрпБрокрпНрокро╛роЯрпБ',
        'рокро▓рпНро▓рпБропро┐ро░рпН рокро╛родрпБроХро╛рокрпНрокрпБ',
        'рокроЪрпНроЪрпИ родрпКро┤ро┐ро▓рпНроирпБроЯрпНрокроорпН'
      ],
      womenEmpowerment: [
        'родро┐ро▒ройрпН роорпЗроорпНрокро╛роЯрпБ',
        'родрпКро┤ро┐ро▓рпН роорпБройрпИро╡рпЛро░рпН',
        'роЪроЯрпНроЯ роЙродро╡ро┐',
        'роЪрпБроп роЙродро╡ро┐ роХрпБро┤рпБроХрпНроХро│рпН',
        'родро▓рпИроорпИродрпНродрпБро╡ рокропро┐ро▒рпНроЪро┐',
        'роиро┐родро┐ роЪрпЗро░рпНроХрпНроХрпИ',
        'роЪрпБроХро╛родро╛ро░ ро╡ро┐ро┤ро┐рокрпНрокрпБрогро░рпНро╡рпБ',
        'роХро▓рпНро╡ро┐ роЖродро░ро╡рпБ',
        'роХрпБроЯрпБроорпНрок ро╡ройрпНроорпБро▒рпИ родроЯрпБрокрпНрокрпБ',
        'рокрпКро░рпБро│ро╛родро╛ро░ ро╡ро▓рпБро╡рпВроЯрпНроЯро▓рпН',
        'роЙро░ро┐роорпИроХро│рпН ро╡ро╛родроорпН'
      ],
      ruralDevelopment: [
        'роЙро│рпНроХроЯрпНроЯроорпИрокрпНрокрпБ ро╡ро│ро░рпНроЪрпНроЪро┐',
        'ро╡ро┐ро╡роЪро╛роп роЖродро░ро╡рпБ',
        'роирпАро░рпН ро╡ро┤роЩрпНроХро▓рпН',
        'роХро┐ро░ро╛рооро┐роп ро╡роЩрпНроХро┐',
        'родрпКро┤ро┐ро▓рпНроирпБроЯрпНрок роЕрогрпБроХро▓рпН',
        'роЪроирпНродрпИ роЗрогрпИрокрпНрокрпБроХро│рпН',
        'роХрпВроЯрпНроЯрпБро▒ро╡рпБ ро╡ро│ро░рпНроЪрпНроЪро┐',
        'роХро┐ро░ро╛рооро┐роп ро╡рпАроЯрпНроЯрпБро╡роЪродро┐',
        'рокрпЛроХрпНроХрпБро╡ро░родрпНродрпБ',
        'родроХро╡ро▓рпН родрпКроЯро░рпНрокрпБ роЕроорпИрокрпНрокрпБроХро│рпН',
        'ро╡ро╛ро┤рпНро╡ро╛родро╛ро░ родро┐роЯрпНроЯроЩрпНроХро│рпН'
      ],
      childWelfare: [
        'роХрпБро┤роирпНродрпИ рокро╛родрпБроХро╛рокрпНрокрпБ',
        'роКроЯрпНроЯроЪрпНроЪродрпНродрпБ родро┐роЯрпНроЯроЩрпНроХро│рпН',
        'роЖро░роорпНрокроХро╛ро▓ роХрпБро┤роирпНродрпИрокрпН рокро░ро╛рооро░ро┐рокрпНрокрпБ',
        'роХрпБро┤роирпНродрпИ роХро▓рпНро╡ро┐',
        'роЪрпБроХро╛родро╛ро░ роЪрпЗро╡рпИроХро│рпН',
        'рокрпКро┤рпБродрпБрокрпЛроХрпНроХрпБ роироЯро╡роЯро┐роХрпНроХрпИроХро│рпН',
        'роЖро▓рпЛроЪройрпИ роЪрпЗро╡рпИроХро│рпН',
        'ро╡ро│ро░рпНрокрпНрокрпБ рокро░ро╛рооро░ро┐рокрпНрокрпБ',
        'родродрпНродрпЖроЯрпБрокрпНрокрпБ роЪрпЗро╡рпИроХро│рпН',
        'роХрпБро┤роирпНродрпИ роЙро░ро┐роорпИроХро│рпН ро╡ро╛родроорпН',
        'роЪро┐ро▒рокрпНрокрпБ родрпЗро╡рпИроХро│рпН роЖродро░ро╡рпБ'
      ],
      elderlyCare: [
        'роорпВродрпНрод рокро░ро╛рооро░ро┐рокрпНрокрпБ роЪрпЗро╡рпИроХро│рпН',
        'роЪрпБроХро╛родро╛ро░ роХрогрпНроХро╛рогро┐рокрпНрокрпБ',
        'роЪроорпВроХ роироЯро╡роЯро┐роХрпНроХрпИроХро│рпН',
        'ро╡рпАроЯрпНроЯрпБ рокро░ро╛рооро░ро┐рокрпНрокрпБ',
        'роУропрпНро╡рпВродро┐роп роЖродро░ро╡рпБ',
        'рооро░рпБродрпНродрпБро╡ роЙродро╡ро┐',
        'родрпЛро┤роорпИ родро┐роЯрпНроЯроЩрпНроХро│рпН',
        'рокрпКро┤рпБродрпБрокрпЛроХрпНроХрпБ роироЯро╡роЯро┐роХрпНроХрпИроХро│рпН',
        'рооройроиро▓ роЖродро░ро╡рпБ',
        'роЕро╡роЪро░ роЪрпЗро╡рпИроХро│рпН',
        'роХрпБроЯрпБроорпНрок роЖродро░ро╡рпБ'
      ],
      disasterRelief: [
        'роЕро╡роЪро░ рооро▒рпБроорпКро┤ро┐',
        'роиро┐ро╡ро╛ро░рог ро╡ро┐роиро┐ропрпЛроХроорпН',
        'рооро▒рпБро╡ро╛ро┤рпНро╡рпБ',
        'родропро╛ро░рпНроиро┐ро▓рпИ рокропро┐ро▒рпНроЪро┐',
        'роЖрокродрпНродрпБ роородро┐рокрпНрокрпАроЯрпБ',
        'роЪроорпВроХ роЕрогро┐родро┐ро░роЯрпНроЯро▓рпН',
        'роорпАроЯрпНрокрпБ родро┐роЯрпНроЯроЩрпНроХро│рпН',
        'родроЩрпНроХрпБрооро┐роЯ роорпЗро▓ро╛рогрпНроорпИ',
        'рооро░рпБродрпНродрпБро╡ роЕро╡роЪро░роиро┐ро▓рпИ',
        'роЙрогро╡рпБ рокро╛родрпБроХро╛рокрпНрокрпБ',
        'роЙро│ро╡ро┐ропро▓рпН роЖродро░ро╡рпБ'
      ],
      skillDevelopment: [
        'родрпКро┤ро┐ро▓рпНроирпБроЯрпНрок рокропро┐ро▒рпНроЪро┐',
        'роорпЖройрпНроорпИропро╛рой родро┐ро▒ройрпНроХро│рпН',
        'роХрогро┐ройро┐ рокропро┐ро▒рпНроЪро┐',
        'роХрпИро╡ро┐ройрпИрокрпНрокрпКро░рпБроЯрпНроХро│рпН',
        'родрпКро┤ро┐ро▓рпН роорпБройрпИро╡рпЛро░рпН',
        'ро╡рпЗро▓рпИ ро╡ро╛ропрпНрокрпНрокрпБ',
        'роЪро╛ройрпНро▒ро┐родро┤рпН родро┐роЯрпНроЯроЩрпНроХро│рпН',
        'родрпКро┤ро┐ро▓рпН роХрпВроЯрпНроЯро╛рогрпНроорпИ',
        'родрпКро┤ро┐ро▓рпН роЖро▓рпЛроЪройрпИ',
        'роиро┐родро┐ роХро▓рпНро╡ро┐ропро▒ро┐ро╡рпБ',
        'рокрпБродрпНродро╛роХрпНроХ роЖропрпНро╡роХроЩрпНроХро│рпН'
      ]
    }
  };

  const domains = [
    {
      title: t('education'),
      icon: 'ЁЯУЪ',
      description: t('educationDesc'),
      key: 'education'
    },
    {
      title: t('healthcare'),
      icon: 'ЁЯПе',
      description: t('healthcareDesc'),
      key: 'healthcare'
    },
    {
      title: t('environment'),
      icon: 'ЁЯМ▒',
      description: t('environmentDesc'),
      key: 'environment'
    },
    {
      title: t('womenEmpowerment'),
      icon: 'ЁЯСй',
      description: t('womenEmpowermentDesc'),
      key: 'womenEmpowerment'
    },
    {
      title: t('ruralDevelopment'),
      icon: 'ЁЯПШя╕П',
      description: t('ruralDevelopmentDesc'),
      key: 'ruralDevelopment'
    },
    {
      title: t('childWelfare'),
      icon: 'ЁЯС╢',
      description: t('childWelfareDesc'),
      key: 'childWelfare'
    },
    {
      title: t('elderlyCare'),
      icon: 'ЁЯС┤',
      description: t('elderlyCareDesc'),
      key: 'elderlyCare'
    },
    {
      title: t('disasterRelief'),
      icon: 'ЁЯЖШ',
      description: t('disasterReliefDesc'),
      key: 'disasterRelief'
    },
    {
      title: t('skillDevelopment'),
      icon: 'ЁЯЫая╕П',
      description: t('skillDevelopmentDesc'),
      key: 'skillDevelopment'
    }
  ];

  const handleDomainClick = (domain: typeof domains[0]) => {
    const departments = departmentTranslations[language][domain.key as keyof typeof departmentTranslations.english];
    setSelectedDomain({
      title: domain.title,
      departments: departments
    });
  };

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Hero Section */}
      <section className="bg-gradient-to-r from-emerald-600 to-teal-600 text-white py-20">
        <div className="container mx-auto px-4 text-center">
          <h1 className="text-5xl font-bold mb-4">{t('heroTitle')}</h1>
          <p className="text-xl mb-8">{t('heroSubtitle')}</p>
          <p className="text-lg max-w-2xl mx-auto">
            {t('heroDescription')}
          </p>
        </div>
      </section>

      {/* Domains Section */}
      <section className="py-16">
        <div className="container mx-auto px-4">
          <h2 className="text-4xl font-bold text-center text-gray-800 mb-4">{t('domainsTitle')}</h2>
          <p className="text-lg text-gray-600 text-center mb-12 max-w-2xl mx-auto">
            {t('domainsSubtitle')}
          </p>
          
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            {domains.map((domain, index) => (
              <DomainBox
                key={index}
                title={domain.title}
                icon={domain.icon}
                description={domain.description}
                onClick={() => handleDomainClick(domain)}
              />
            ))}
          </div>
        </div>
      </section>

      {/* Vision & Mission Section */}
      <section className="py-16 bg-white">
        <div className="container mx-auto px-4">
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-12">
            {/* Vision */}
            <div className="bg-emerald-50 rounded-lg p-8 border border-emerald-200">
              <h2 className="text-3xl font-bold text-emerald-600 mb-6">{t('ourVision')}</h2>
              <p className="text-gray-700 text-lg leading-relaxed">
                {t('visionText')}
              </p>
            </div>

            {/* Mission */}
            <div className="bg-teal-50 rounded-lg p-8 border border-teal-200">
              <h2 className="text-3xl font-bold text-teal-600 mb-6">{t('ourMission')}</h2>
              <p className="text-gray-700 text-lg leading-relaxed">
                {t('missionText')}
              </p>
            </div>
          </div>
        </div>
      </section>

      {/* Modal */}
      <DomainModal
        isOpen={!!selectedDomain}
        onClose={() => setSelectedDomain(null)}
        domainTitle={selectedDomain?.title || ''}
        departments={selectedDomain?.departments || []}
      />
    </div>
  );
};

export default Home;
